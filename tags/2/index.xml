<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2 on Wesley Hales</title>
    <link>http://wesleyhales.com:1313/tags/2/</link>
    <description>Recent content in 2 on Wesley Hales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Aug 2009 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://wesleyhales.com:1313/tags/2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Replacing FacesMessages with Growl alerts</title>
      <link>http://wesleyhales.com:1313/blog/2009/08/10/Replacing-FacesMessages-with-Growl-alerts</link>
      <pubDate>Mon, 10 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2009/08/10/Replacing-FacesMessages-with-Growl-alerts</guid>
      <description>&lt;p&gt;I saw a tweet from(&lt;a href=&#34;http://twitter.com/maxandersen&#34;&gt;@maxandersen&lt;/a&gt;) the other day and decided to try adding Growl like messages in a standard JSF/Richfaces application using jGrowl. It is quite simple and my approach could definitely be improved upon.&lt;/p&gt; 
&lt;p&gt;This is really just javascript on the front end and can be used with any backend message generating system.&lt;/p&gt; 

&lt;p class=&#34;pTitle&#34;&gt;Code Used:&lt;/p&gt; 
&lt;p&gt; 
&lt;ul&gt; 
&lt;li&gt;&lt;a href=&#34;http://jboss.org/jbossrichfaces/&#34;&gt;RichFaces 3.3.1.GA&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&#34;http://stanlemon.net/projects/jgrowl.html&#34;&gt;jGrowl (latest)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/p&gt; 

&lt;p class=&#34;pTitle&#34;&gt;Include the scripts in the head:&lt;/p&gt; 
&lt;p&gt; 
Note the loading of jquery in the Richfaces page... 
&lt;code&gt;&lt;pre&gt; 
&lt;a name=&#34;l1&#34;&gt;&lt;span class=&#34;s0&#34;&gt; 
&lt;a name=&#34;l5&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;a4j:loadScript &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;&amp;quot;resource://jquery.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;link &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;&amp;quot;stylesheet&amp;quot; &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;&amp;quot;/css/jquery-plugins/jquery.jgrowl.css&amp;quot; &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt; 
&lt;a name=&#34;l4&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;script &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;&amp;quot;text/javascript&amp;quot; &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;&amp;quot;/js/jquery-plugins/jquery.jgrowl.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt; 
&lt;span class=&#34;s0&#34;&gt; 
&lt;/span&gt; &lt;/span&gt;&lt;/a&gt; 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 

&lt;p class=&#34;pTitle&#34;&gt;Write a simple script to extract the message:&lt;/p&gt; 
&lt;p&gt; 
... and add any customizations you may need to jGrowl. One thing to take note of here is that you cannot use the $ sign for jQuery in a Richfaces app. This is because of the RF framework using prototype.js by default and it too uses the $ sign. So every 3rd party jQuery script that you use, you must s/$/jQuery/g (find and replace all usages of &#39;$&#39; with &#39;jQuery&#39;) 
&lt;code&gt;&lt;pre&gt; 
function showError() 
{ 
jQuery.jGrowl.defaults.position = &#39;center&#39;; 
if (document.getElementById(&#39;errorMessage&#39;) != null) 
{ 
jQuery.jGrowl(jQuery(&#39;#errorMessage&#39;).html(), { 
sticky: false, 
life: 10000 
}) 
} 
} 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 

&lt;p class=&#34;pTitle&#34;&gt;And tell the script to run after page load:&lt;/p&gt; 
&lt;p&gt; 
jQuery has a simple statement that checks the document and waits until it&#39;s ready to be manipulated, known as the ready event: 
&lt;code&gt;&lt;pre&gt; 
$(document).ready(function(){ 
showError(); 
}); 

&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 

&lt;p&gt;Here is a live screen shot of the script in action using a generate h:message. 
&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/jgrowl.gif&#34; align=&#34;center&#34;/&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>