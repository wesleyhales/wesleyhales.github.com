<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Wesley Hales</title>
    <link>http://wesleyhales.com:1313/tags/css/</link>
    <description>Recent content in Css on Wesley Hales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Feb 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://wesleyhales.com:1313/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Adventures with the Skia Debugger</title>
      <link>http://wesleyhales.com:1313/blog/2013/02/18/adventures-with-the-skia-debugger</link>
      <pubDate>Mon, 18 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2013/02/18/adventures-with-the-skia-debugger</guid>
      <description>&lt;p&gt;&lt;br/&gt;
&lt;h3&gt;Debugging jank, reflows, etc&amp;hellip;&lt;/h3&gt;
The &lt;a href=&#34;https://sites.google.com/site/skiadocs/developer-documentation/skia-debugger&#34;&gt;Skia debugger&lt;/a&gt; was mentioned a few weeks ago at EdgeConf as a way to examine how the DOM is loaded and processed in the Chromium web browser. Skia is the open source C++ graphics library backing Chromium/Chrome. It comes with a graphical tool used to step through and analyze the contents of the skia picture format.&lt;/p&gt;

&lt;p&gt;If you haven’t watched &lt;a href=&#34;http://www.youtube.com/watch?v=3-WYu_p5rdU&#34;&gt;this video&lt;/a&gt;, I recommend you take a few minutes and watch the first part to understand the context of why the Skia debugger was mentioned and where it might be useful. For the impatient, there was a lot of talk around image decoding and scrolling. This morphed into a discussion about bounce rates and how scrolling really matters from an experience standpoint. Basically, if you’re scrolling sucks, users do a lot less and bounce quicker.&lt;/p&gt;

&lt;p&gt;Overall, it sparked my curiosity to see if I could get a visual understanding of reflow happening on web sites/apps&amp;hellip; much like this FF3 reflow video from a few years ago.&lt;/p&gt;

&lt;p&gt;&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;http://www.youtube.com/embed/ZTnIxIA5KGw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
Although the Skia debugger doesn&amp;rsquo;t give us a nice video with animations (like shown above), it does give some really good info on how graphics are drawn into the browser.
This &lt;a href=&#34;http://blog.mozilla.org/gen/2009/04/09/how-to-make-your-own-gecko-reflow-video/&#34;&gt;blog post&lt;/a&gt; explains how the above video was created with FF 3.1, but I’m not sure if anyone has attempted it with the latest Firefox build&amp;hellip; and there is no visual debugger afaik. I did hear one of the panel members mention a Firefox “jank mode” but a short Google search turned up little results that don’t work on the latest version.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;
&lt;h3&gt;Building the debugger from source&lt;/h3&gt;
I will state upfront that there was a lot of pain that went into building both the debugger and chromium from source, but as you will see, it was worth it.&lt;/p&gt;

&lt;p&gt;Here are my build notes for OSX 10.7.5:
&lt;script src=&#34;https://gist.github.com/wesleyhales/4980385.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;
&lt;h3&gt;Using the Debugger&lt;/h3&gt;
The debugger is fairly straightforward to use once a picture is loaded in. You can step through different commands via the up and down keys and clicking on the command in the list. You can also pause execution of commands with the pause button in order to inspect the details of the command in the inspector tabs down below.
&lt;img src=&#34;http://wesleyhales.com:1313/images/posts/2013-02-18/skia-ss.PNG&#34; alt=&#34;skia&#34; class=&#34;margin10 max-width-100&#34;&gt;
Here are the available keyboard shortcuts for the debugger:
&lt;img src=&#34;http://wesleyhales.com:1313/images/posts/2013-02-18/skia-commands.PNG&#34; alt=&#34;skia&#34; class=&#34;margin10 max-width-100&#34;&gt;&lt;/p&gt;

&lt;p&gt;After playing around with the debugger, it’s nice to get a very low level snapshot of how long it takes a specific browser to draw the pictures necessary to present a web page.&lt;/p&gt;

&lt;p&gt;P.S. I plan on uploading my produced binaries (somewhere), so if you&amp;rsquo;re on a Mac around version 10.7.5, hit me up @wesleyhales. Hopefully I can save a few poor souls a weekend full of building from sources ;)
Happy debugging!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS Framework</title>
      <link>http://wesleyhales.com:1313/blog/2007/08/14/css-framework</link>
      <pubDate>Tue, 14 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2007/08/14/css-framework</guid>
      <description>&lt;p&gt;There are several possible ways to go about building a CSS framework. The framework I mention here is suited for myself and the group of developers I work with. It has proven successful on the past 3 projects I have been on. 
Once everyone knows about a base set of styles it&#39;s amazing how much more productive the team is. Not only do you have a &#34;master&#34; type of stylesheet to work from, everyone can edit the code and make changes faster because they are aware of the framework in use.&lt;/p&gt; 

&lt;p&gt;Many UI folks use inline styles just to get a page marked up, or pixel perfect. But this actually hinders productivity and makes the developer almost double their work. We all know that when you&#39;re buried in a project and working away getting things done, it is much harder to come back and &#34;fix&#34; things. Some people may enjoy working like that, but as a project lead you constantly have to remind people to go back in and clean up their work and sometimes I end up doing it myself. And, if you are using inline styles, then you go back and fix them, other developers may have already added your style to a stylesheet and you may overlook it and duplicate the same style over and over again.&lt;/p&gt; 

&lt;p&gt;Bottom line is, use a framework like the example below and life will be much easier ;)&lt;p&gt; 

&lt;p&gt;Here are a few examples of usage. This is a very lean and mean framework for managing widths and alignment. I&#39;m not too concerned with zeroing out all of my html elements like p, table, td, ul, etc. That is a given and some sites differ due to legacy issues and crappy css code. 
&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/css-framework.jpg&#34; alt=&#34;&#34;/&gt;&lt;/p&gt; 

&lt;p&gt;You will find yourself cascading the styles on almost every element. The great thing is that you don&#39;t have to double-pane the css file and your xhmtl, you can get things done very fast and done correctly... the first go &#39;round. &lt;/p&gt; 

&lt;p&gt;&lt;p&gt;And the code&amp;hellip;&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&#34;s0&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;align-center &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;center&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;align-center-margin &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;0 &lt;/span&gt;&lt;span 
class=&#34;s4&#34;&gt;auto &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;0 &lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;float-left &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;left&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;float-right &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;right&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;align-left &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;left&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;align-right &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;right&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;half-width &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;49&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;%;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;quarter-width &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;24.9&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;%;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;three-quarter-width &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;74.9&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;%;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;full-width &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;100&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;%;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;third-width &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;32.9&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;%;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;two-third-width &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;65.9&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;%;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;tenpx-top-bottom &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;10&lt;/span&gt;&lt;span 
class=&#34;s4&#34;&gt;px &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;0 10&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;px &lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;0&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;;
}&lt;/p&gt;

&lt;p&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;clear &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;both&lt;/span&gt;&lt;span 
class=&#34;s0&#34;&gt;;
}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>