<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lrd on Wesley Hales</title>
    <link>http://wesleyhales.com/tags/lrd/</link>
    <description>Recent content in Lrd on Wesley Hales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Oct 2007 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://wesleyhales.com/tags/lrd/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Maven 2 vs. Ant (revisited)</title>
      <link>http://wesleyhales.com/blog/2007/10/30/Maven-2-vs.-Ant-revisited</link>
      <pubDate>Tue, 30 Oct 2007 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com/blog/2007/10/30/Maven-2-vs.-Ant-revisited</guid>
      <description>&lt;p&gt;Almost a year since I made &lt;a href=&#34;http://www.jroller.com/wesleyhales/entry/maven_2_vs_ant_which&#34;&gt;this entry&lt;/a&gt; and I think Maven is great for open source and commercial apps. Sure, there may be &lt;a href=&#34;http://blog.thomas.heute.name/2007/10/ant-vs-maven-round-2.html&#34;&gt;a few things&lt;/a&gt; you want to do that don&#39;t fit into the &#34;Maven way&#34; but for the most part, it is a great build system. 
Also, any one that uses IntelliJ Idea will fall in love with Maven on first use (I guess it handles Eclipse project files just as well).&lt;/p&gt; 
&lt;/p&gt; 
&lt;p&gt;I recently worked on converting a JBoss Portal module from Ant to Maven and you can &lt;a href=&#34;http://jbossportal.blogspot.com/search/label/maven&#34;&gt;read about&lt;/a&gt; a few generic problems that I ran into and how to overcome them. 
&lt;/p&gt; 
&lt;p&gt;Also, one very powerful feature of Maven that I am messing around with right now is filtering and profile &#34;mashups&#34;.
Lets say, I want LRD (local rapid development ;-) on my workstation using Tomcat. Usually I would use the Jetty plugin because it is the ultimate for Maven LRD, but the majority of the time and to match what is in production, developers use Tomcat at a minimum. Here is a quick tip for creating a shared distributable app using the aforementioned. 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;In a existing Maven app, create the following structure:&lt;/h3&gt; 
&lt;code&gt;&lt;pre&gt; 
src 
|-main 
|-filters 
|-tomcat.properties 
|-resources 
|-context.xml 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;In your pom.xml we have something like&lt;/h3&gt;: 
&lt;code&gt;&lt;pre&gt; 
&lt;a name=&#34;l1&#34;&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;tomcat&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l3&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;activation&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l4&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;activeByDefault&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;activeByDefault&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 

&lt;a name=&#34;l5&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;activation&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l6&#34;&gt; 
&lt;a name=&#34;l7&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l8&#34;&gt; 
&lt;a name=&#34;l9&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;filters&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l10&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;src/main/filters/tomcat.properties&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 

&lt;a name=&#34;l11&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;filters&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l12&#34;&gt; 
&lt;a name=&#34;l13&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l14&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l15&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;${basedir}/src/main/resources&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 

&lt;a name=&#34;l16&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;filtering&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;filtering&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l17&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;targetPath&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;../${build.finalName}/META-INF&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;targetPath&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l18&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;includes&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l19&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;context.xml&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 

&lt;a name=&#34;l20&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;includes&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l21&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 
&lt;a name=&#34;l22&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;s0&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/a&gt; 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;in tomcat.properties&lt;/h3&gt; 
&lt;code&gt;&lt;pre&gt; 
context.docBase=${basedir}/target/${project.build.finalName} 
context.path=/${project.build.finalName} 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;and in context.xml&lt;/h3&gt; 
&lt;code&gt;&lt;pre&gt; 
&amp;lt;Context path=&#34;${context.path}&#34; docBase=&#34;${context.docBase}&#34; reloadable=&#34;true&#34;/&amp;gt; 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;Once you have all of this in place (along with a good cargo config found &lt;a href=&#34;http://www.jroller.com/wesleyhales/entry/running_seam_2_0_on&#34;&gt;in this post&lt;/a&gt;) you will be on your way to a enjoyable, easy development setup.&lt;/p&gt; 
&lt;p&gt; 
&lt;p&gt; 
So now, all you have to do to hot deploy your maven app to a running instance of Tomcat is type the following: 
&lt;code&gt;mvn install -Ptomcat&lt;/code&gt;&lt;br/&gt; 
This will compile and deploy your changes quickly. You can also set your IDE to copy jsp/xhtml files over using a keyboard shortcut mapping (easy to do with Idea) so for UI changes you don&#39;t have to hot deploy every time. 
&lt;/p&gt; 
This example just scratches the surface of what mixing profiles with filtering can do. You could have a filtering/profile mechanism for every possible scenario. 
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>