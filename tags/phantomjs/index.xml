<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phantomjs on Wesley Hales</title>
    <link>//wesleyhales.com/tags/phantomjs/</link>
    <description>Recent content in Phantomjs on Wesley Hales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Aug 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//wesleyhales.com/tags/phantomjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Web Performance Testing With PhantomJS</title>
      <link>//wesleyhales.com/blog/2012/08/16/Web-Performance-Testing-With-PhantomJS/</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>//wesleyhales.com/blog/2012/08/16/Web-Performance-Testing-With-PhantomJS/</guid>
      <description>HTTP requests, heavy/unminified resources, and UI thread blocking should be on the mind of every front-end developer. These are just a few issues that can cause serious bottlenecks in page load times. Having a faster load time equals better search engine rankings, higher conversion rates, and an overall reduction in bandwidth costs.
I recently took on the task of coming up with an accurate way to measure all the aforementioned things, in an effort to understand which performance tweaks improved page load times and which ones didn&amp;rsquo;t.</description>
    </item>
    
  </channel>
</rss>