<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portal on Wesley Hales</title>
    <link>http://wesleyhales.com:1313/tags/portal/</link>
    <description>Recent content in Portal on Wesley Hales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Apr 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://wesleyhales.com:1313/tags/portal/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Does Developing Portlets Make You a Better Developer?</title>
      <link>http://wesleyhales.com:1313/blog/2011/04/05/does-developing-portlets-make-you-a-better-developer</link>
      <pubDate>Tue, 05 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2011/04/05/does-developing-portlets-make-you-a-better-developer</guid>
      <description>&lt;p&gt;&lt;p&gt;Working with portlet technology is often discredited for it’s seemingly complex &lt;span class=&#34;caps&#34;&gt;API&lt;/span&gt; and development hoops one must jump through. But if you have worked on a portlet project for a considerable amount of time, and then jump back to a servlet based project, you have a feeling that life just got easier.&lt;br /&gt; 
This is all within the context of which servlet-based framework you might be working with, but overall things are a bit easier when dealing with one request and response.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;What if you didn’t have to worry about portlet development gotchas anymore? What if you could develop portlets with the ease and hassle free life that you have with good ol’ servlets? Well, I’m here to tell you that this can be partly achieved with JSR-301 portlet bridge technology.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;I encourage (actually I dare you) to those who have never even touched a portal to take the JBoss Portlet Bridge for a test drive. It takes &lt;a href=&#34;http://downloads.sourceforge.net/project/jboss/GateIn/Portal/3.1.0-FINAL/GateIn-3.1.0-FINAL-jbossas.zip&#34;&gt;1 download (GateIn bundled with JBoss)&lt;/a&gt; and one maven archetype to get started. You can choose from any combination of plain &lt;span class=&#34;caps&#34;&gt;JSF&lt;/span&gt;, Richfaces, and Seam with&lt;br /&gt; 
&lt;code style=&#34;color:white&#34;&gt;mvn archetype:generate -DarchetypeCatalog=http://bit.ly/jbossportletbridge&lt;/code&gt; from the command line.&lt;br /&gt; 
&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/jbw2011/archetype.gif&#34; alt=&#34;&#34;/&gt;&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;If you run into any questions or special usecases, we have 7 videos which demo and walk you through just about anything you could think up.&lt;br /&gt; 
&lt;a href=&#34;http://vimeo.com/wesleyhales/videos/sort:date&#34;&gt;&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/jbw2011/vimeo.gif&#34; alt=&#34;&#34; align=&#34;center&#34;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;&lt;a href=&#34;http://refcardz.dzone.com/refcardz/mastering-portals-portlet&#34;&gt;&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/jbw2011/refcard.gif&#34; alt=&#34;&#34; align=&#34;right&#34;/&gt;&lt;/a&gt;And for those that like to have a refcard by their side, you can get all the information you need about the story of portal technology and configuration drill downs here: &lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;From &lt;a href=&#34;http://refcardz.dzone.com/refcardz/mastering-portals-portlet&#34;&gt;“Mastering Portals with a Portlet Bridge”&lt;/a&gt; DZone Refcard:&lt;br /&gt; 
“A portlet bridge allows you to run application frameworks like &lt;span class=&#34;caps&#34;&gt;JSF&lt;/span&gt; in a portal environment without needing to know anything about the underlying portlet &lt;span class=&#34;caps&#34;&gt;API&lt;/span&gt; or portlet concepts.”&lt;br /&gt; 
&lt;/p&gt;&lt;br /&gt; 
&lt;br/&gt;&lt;br /&gt; 
&lt;p&gt;&lt;br /&gt; 
&lt;a href=&#34;http://www.redhat.com/summit/sessions/jboss.html&#34;&gt;&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/jbw2011/jbw-2011.gif&#34; alt=&#34;&#34; align=&#34;left&#34; style=&#34;margin:0 15px 25px 0&#34;/&gt;&lt;/a&gt;&lt;br /&gt; 
And if all that wasn’t enough, I will be giving a 50 minute talk at JBoss World titled &lt;a href=&#34;http://www.redhat.com/summit/sessions/jboss.html&#34;&gt;&#34;Making Portals Cool: The Compelling Advantages of a Portlet Bridge&#34;&lt;/a&gt; where you can come and personally track me down and specifically tell me about your problems, pains, or happiness with the project or the world in general &lt;img src=&#34;http://www.jroller.com/images/smileys/wink.gif&#34; class=&#34;smiley&#34; alt=&#34;;)&#34; title=&#34;;)&#34; /&gt; JBoss World will be located in Boston from May 3&amp;#8211;6.&lt;br /&gt; 
I think &lt;a href=&#34;http://www.redhat.com/summit/rates/&#34;&gt;early bird pricing&lt;/a&gt; ends this Friday (April 8th), so you better hurry if you want to save a little cash.&lt;/p&gt; 

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contextual PortletMode changes using the JBoss Portlet Bridge</title>
      <link>http://wesleyhales.com:1313/blog/2009/12/10/contextual-portletmode-changes-using-the-jboss-portlet-bridge</link>
      <pubDate>Thu, 10 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2009/12/10/contextual-portletmode-changes-using-the-jboss-portlet-bridge</guid>
      <description>&lt;p&gt;&lt;p&gt;By default, the JSR-&lt;sup&gt;301&lt;/sup&gt;&amp;frasl;&lt;sub&gt;329&lt;/sub&gt; portlet bridge manages your navigation history during PortletMode changes. Meaning that, if the user is clicking around in the portlet &amp;ldquo;view&amp;rdquo; mode and decides to click the help icon (help mode), the user should be directed to the place where he left off in help mode - and vice versa. Of course, if the user has never been in help mode during the current session, he will go to the default help viewId.&lt;/p&gt;
&lt;p class=&#34;pTitle&#34;&gt;Why use portlet modes instead of javascript widgets?&lt;/p&gt;
&lt;p&gt;First I would like to give you a little justification of the beauty of this feature. Some people will argue the point of &amp;ldquo;Why do you need different modes like, Help and Edit?&amp;rdquo;, when you could add some cool &amp;ldquo;javascript of the week&amp;rdquo; that would dynamically display what you intended to present in one of the given modes. Well, you could develop your interactions either way but it really isn&amp;rsquo;t a question of why. It&amp;rsquo;s a question of &amp;ldquo;How?&amp;rdquo;. How do you want users to interact with your applications? And since you have already made the decision to invest in a portal solution, why not use the features that are built in and that stay consistent across the entire UI? Any UI Developer or Interaction Designer will tell you that adding cool javascript widgets adds another layer of complexity and maintenance, thus adding to developer time and bottom line ROI. In addition, when you develop any servlet based application to work within a portal environment, you are properly separating your concerns when you use these modes (without even realizing it in most cases). You are presenting distinguished flows for different trains of thought and making it easier for users to accomplish the task at hand.&lt;/p&gt;
&lt;p class=&#34;pTitle&#34;&gt;The Usecase&lt;/p&gt;
&lt;p&gt;Ok, off the soap box and onto the use case. Let&amp;rsquo;s say your user is filling out a beloved expense report. It&amp;rsquo;s probably one of his top 5 things that he loves most about his job &lt;img src=&#34;http://www.jroller.com/images/smileys/wink.gif&#34; class=&#34;smiley&#34; alt=&#34;;)&#34; title=&#34;;)&#34; /&gt; Seriously, his IT department just launched a new intranet portal using the latest and greatest &lt;a href=&#34;http://jboss.org/gatein&#34;&gt;GateIn&lt;/a&gt; platform and they completely revamped their old Seam application that was used for expense report submissions to run as a portlet.&lt;/p&gt;
&lt;p&gt;
So, Joe User starts to fill out his expense report in a 6 step wizard. He gets through the first few steps and arrives at a screen asking for his cost center and other details that he has no idea about. Behold the beautiful question mark(help mode) in the top right hand corner of his portlet window! Joe clicks the button and sees exactly the information he needs, and he also sees a link at the bottom of the screen that says &amp;#8220;add this to the form&amp;#8221;. Joe clicks it, and is returned to his expense report with all of the details pre-populated in his form. Not only was the help screen easy to understand, but it was just a basic .xhtml page that can be templated and maintained by any UI developer without any special javascript kung fu.
&lt;/p&gt;
&lt;p&gt;The next screen (in view mode), asks him to itemize each receipt and expense. Since he took a trip to Euro-land, all of his receipts are in Euros. And since he recently just got his internet privileges suspended (and no, he won&amp;rsquo;t tell us why) he has no idea what the current conversion rates are. Once again, Joe clicks the help button and is presented with a clickable table of currency options. Not only that, but the finance department has placed some important notifications on this page via CMS. Joe reads the notifications and clicks on &amp;ldquo;Euros&amp;rdquo; and is taken back to a modified input table that auto converts his itemized euro(€) values to USD($).&lt;/p&gt;
&lt;p&gt;As you can see, these are just random examples of possibilities of detecting PortletMode changes with GateIn, Seam, and RichFaces. The real beauty of this code is detecting the actual mode change and providing contextual help. This is not currently provided by the bridge as a default behavior, so here is the code to do it:&lt;/p&gt;
&lt;p class=&#34;pTitle&#34;&gt;The Code&lt;/p&gt;
&lt;p&gt;First create a simple session bean with the following code. This will allow us to get a handle on the current mode.&lt;/p&gt;
&lt;code&gt;&lt;pre&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;l46&#34;&gt; &lt;span class=&#34;s2&#34;&gt;private &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;String mode;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l47&#34;&gt;
&lt;/a&gt;&lt;a name=&#34;l48&#34;&gt; &lt;span class=&#34;s2&#34;&gt;public &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;String getMode()
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l49&#34;&gt; {
&lt;/a&gt;&lt;a name=&#34;l50&#34;&gt; Object responseObject = FacesContext.getCurrentInstance().getExternalContext().getRequest();
&lt;/a&gt;&lt;a name=&#34;l51&#34;&gt; &lt;span class=&#34;s2&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;(responseObject &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;instanceof &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;RenderRequest) {&lt;/p&gt;

&lt;p&gt;&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l52&#34;&gt; RenderRequest renderRequest = (RenderRequest)responseObject;
&lt;/a&gt;&lt;a name=&#34;l53&#34;&gt; &lt;span class=&#34;s2&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;(renderRequest.getPortletMode().toString().equals(mode)){
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l54&#34;&gt; mode = &lt;span class=&#34;s2&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l55&#34;&gt; }&lt;span class=&#34;s2&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;{
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l56&#34;&gt; mode = renderRequest.getPortletMode().toString();
&lt;/a&gt;&lt;a name=&#34;l57&#34;&gt; }&lt;/p&gt;

&lt;p&gt;&lt;/a&gt;&lt;a name=&#34;l58&#34;&gt; }
&lt;/a&gt;&lt;a name=&#34;l59&#34;&gt; &lt;span class=&#34;s2&#34;&gt;return &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;mode;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l60&#34;&gt; }
&lt;/a&gt;&lt;a name=&#34;l61&#34;&gt;
&lt;/a&gt;&lt;a name=&#34;l62&#34;&gt; &lt;span class=&#34;s2&#34;&gt;public &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;String getFromView() {
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l63&#34;&gt; PortletSession portletSession = (PortletSession)FacesContext.getCurrentInstance().getExternalContext().getSession(&lt;span class=&#34;s2&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;);
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l64&#34;&gt; String viewId = (String)portletSession.getAttribute(&lt;span class=&#34;s4&#34;&gt;&amp;ldquo;javax.portlet.faces.viewIdHistory.view&amp;rdquo;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;);&lt;/p&gt;

&lt;p&gt;&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l65&#34;&gt; viewId = viewId.substring(&lt;span class=&#34;s5&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;,viewId.indexOf(&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;&amp;rdquo;?&amp;rdquo;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;));
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l66&#34;&gt; &lt;span class=&#34;s2&#34;&gt;return &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;viewId;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l67&#34;&gt; }
&lt;/a&gt;&lt;a name=&#34;l68&#34;&gt;
&lt;/a&gt;&lt;a name=&#34;l69&#34;&gt; &lt;span class=&#34;s2&#34;&gt;public void &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;setMode(String mode)
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l70&#34;&gt; {&lt;/p&gt;

&lt;p&gt;&lt;/a&gt;&lt;a name=&#34;l71&#34;&gt; &lt;span class=&#34;s2&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;.mode = mode;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l72&#34;&gt; }
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/pre&gt;&lt;/code&gt;
&lt;p class=&#34;pTitle&#34;&gt;Next add something similar to this in pages.xml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
&lt;a name=&#34;l8&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;page &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;view-id=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;rdquo;/expenseWizard/*&amp;rdquo; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;action=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;ldquo;&amp;#35;{mode.getMode()}&amp;rdquo;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l9&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l10&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;rule &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;if-outcome=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;ldquo;help&amp;rdquo; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;if=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;ldquo;&amp;#35;{mode.getFromView() == &amp;lsquo;/expenseWizard/step3.xhtml&amp;rsquo;}&amp;rdquo;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l11&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;render &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;view-id=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;rdquo;/helpPages/step3help.xhtml&amp;rdquo;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l12&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;rule&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l13&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;rule &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;if-outcome=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;ldquo;help&amp;rdquo; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;if=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;ldquo;&amp;#35;{mode.getFromView() == &amp;lsquo;/expenseWizard/step4.xhtml&amp;rsquo;}&amp;rdquo;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l14&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;render &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;view-id=&lt;/span&gt;&lt;span class=&#34;s3&#34;&gt;&amp;rdquo;/helpPages/step4help.xhtml&amp;rdquo;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l15&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;rule&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l16&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;&lt;a name=&#34;l17&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;s5&#34;&gt;page&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s4&#34;&gt;
&lt;/span&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Developing an OpenSocial Portlet</title>
      <link>http://wesleyhales.com:1313/blog/2008/10/12/developing-an-opensocial-portlet</link>
      <pubDate>Sun, 12 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2008/10/12/developing-an-opensocial-portlet</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://wesleyhales.com:1313/images/jroller/Picture-6.jpg&#34;&gt;&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/Picture-6-small.jpg&#34; style=&#34;margin:5px;&#34; align=&#34;right&#34;/&gt;&lt;/a&gt;&lt;p&gt;I dedicated some time this weekend to creating a fully functional demo with OpenSocial, Shindig and JBoss Portal. It seems like OpenSocial has a lot of new supported platforms coming out in 0.8 and the future is looking promising. Here is a bullet list to summarize what I found:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation is scarce when you want to roll you own OS container via Shindig&lt;/li&gt;
&lt;li&gt;Luckily &lt;a href=&#34;http://chrisschalk.com/shindig_docs/io/shindig-io.html&#34;&gt;Chris Schalk&lt;/a&gt; did a good job providing some documentation on getting persistence setup on a mysql db&lt;/li&gt;
&lt;li&gt;Unfortunately, due to the bleeding edge of this technology, some of (the few) demos that exist don&amp;rsquo;t work with today&amp;rsquo;s Shindig trunk&lt;/li&gt;
&lt;li&gt;I was able to quickly learn Google widgeting and am on my way to being a &amp;ldquo;widget master&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Next on the list is to mess around with &lt;a href=&#34;http://code.google.com/apis/opensocial/articles/authsub.html&#34;&gt;Google Data APIs in OpenSocial Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The transition/integration of Shindig into a standard webapp/portlet was a huge pita. Too many hard coded servlet context in .js files.&lt;/li&gt;
&lt;li&gt;It seems like (for now) you really need to be into the Orkut scene to leverage current social users. Myspace is something I try to stay away from, and I was really hoping to see some LinkedIn stuff but was let down.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is definitely the way portals are headed and I guess I will try to muster up the energy to write an article once the kinks are worked out of my demo. I would also like to do something cool with the collected social data inside of a portal environment (like notifications of other user activities, posts, changes, etc&amp;hellip;). I used the &lt;a href=&#34;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-2&#34;&gt;JBoss Portlet Bridge Richfaces&lt;/a&gt; project/archetype to create the demo. The bridge makes it incredibly easy to do stuff like this because of having things working on both the servlet and portlet side.&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Developing Portlets using JSF, Ajax, and Seam (Part 1 of 3)</title>
      <link>http://wesleyhales.com:1313/blog/2008/08/06/developing-portlets-using-jsf-ajax-and-seam-part-1-of-3</link>
      <pubDate>Wed, 06 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2008/08/06/developing-portlets-using-jsf-ajax-and-seam-part-1-of-3</guid>
      <description>&lt;p&gt;InfoQ just published the first in a series of 3 articles for the JBoss Portlet Bridge. The author of this series did an unbelievable job. I could write a whole post about how great his article(s) are, but I would hate to loose sight of this post topic :-) heh - just kidding... the author is me!&lt;/p&gt; 
&lt;br/&gt; 
&lt;a href=&#34;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-1&#34;&gt;&lt;img src=&#34;http://wesleyhales.com:1313/images/jroller/infoq-thumb.jpg&#34; alt=&#34;&#34;/&gt;&lt;/a&gt; 

&lt;p&gt;This first part is about basic JSF development with an easy to follow tutorial and real world development tips. The next one will be about RichFaces and the final (about Seam) will be published right after the release of Beta 4 in early September.&lt;/p&gt; 

&lt;p&gt;Enjoy!&lt;br/&gt; 
&lt;a href=&#34;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-1&#34;&gt;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-1&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;&lt;a href=&#34;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-2&#34;&gt;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-2&lt;/a&gt; 
&lt;br/&gt; 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seam 2.0GA in JBoss Portal (in 5 minutes)</title>
      <link>http://wesleyhales.com:1313/blog/2007/11/15/seam-2.0ga-in-jboss-portal-in-5-minutes</link>
      <pubDate>Thu, 15 Nov 2007 00:00:00 +0000</pubDate>
      
      <guid>http://wesleyhales.com:1313/blog/2007/11/15/seam-2.0ga-in-jboss-portal-in-5-minutes</guid>
      <description>&lt;p&gt;**Update - See &lt;a href=&#34;http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_with_seam&#34;&gt;this article&lt;/a&gt; for more info.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>