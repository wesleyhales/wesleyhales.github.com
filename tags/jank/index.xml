<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jank on Wesley Hales</title>
    <link>//wesleyhales.com/tags/jank/</link>
    <description>Recent content in jank on Wesley Hales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Oct 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//wesleyhales.com/tags/jank/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jank Busting Apple&#39;s Home Page</title>
      <link>//wesleyhales.com/blog/2013/10/26/Jank-Busting-Apples-Home-Page/</link>
      <pubDate>Sat, 26 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>//wesleyhales.com/blog/2013/10/26/Jank-Busting-Apples-Home-Page/</guid>
      <description>So, I was on Apple&amp;rsquo;s home page the other day and noticed some jank in their main carousel animation.  It wasn&amp;rsquo;t anything huge, but the animation seemed to stagger a bit as the transitions were beginning and ending. There are five transitions that occur to display different Apple products. You can see this in the Frame analysis below. Each green line shooting to 0 FPS is a paint within chrome.</description>
    </item>
    
    <item>
      <title>Basic Screen Updates with Angular and requestAnimationFrame</title>
      <link>//wesleyhales.com/blog/2013/10/23/Basic-Screen-Updates-with-Angular-and-requestAnimationFrame/</link>
      <pubDate>Wed, 23 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>//wesleyhales.com/blog/2013/10/23/Basic-Screen-Updates-with-Angular-and-requestAnimationFrame/</guid>
      <description>Both approaches require the use of $scope.$apply, which is completely normal. It forces the page/bindings to update when a change is made outside of the AngularJS lifecycle (like inside a setInterval or setTimeout). If you want to read more about $scope.$apply check out this article.
For this particular case, I need a countdown timer on the page. Basically it sits in the upper right hand corner of the page and lets the user know when it&amp;rsquo;s about to refresh the data.</description>
    </item>
    
  </channel>
</rss>