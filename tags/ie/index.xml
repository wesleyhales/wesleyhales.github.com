<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ie on Wesley Hales</title>
    <link>http://localhost:1313/tags/ie/</link>
    <description>Recent content in Ie on Wesley Hales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Jun 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ie/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Sniffing IE9 features while in compatibility mode</title>
      <link>http://localhost:1313/blog/2012/06/08/Sniffing-IE9-features-while-in-compatibility-mode</link>
      <pubDate>Fri, 08 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2012/06/08/Sniffing-IE9-features-while-in-compatibility-mode</guid>
      <description>&lt;p&gt;Getting the browser version from the User Agent string is one thing. But, when you
force compatibility mode in IE, you get whatever version you&amp;rsquo;re forcing to. e.g&amp;hellip;
&lt;code&gt;&lt;pre&gt;&amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=EmulateIE8&amp;quot;/&amp;gt;&lt;/pre&gt;&lt;code&gt;&lt;/p&gt;

&lt;p&gt;in IE9 will cause jQuery&amp;rsquo;s&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;pre&gt;($.browser.version, 10)&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;to return &amp;ldquo;8&amp;rdquo; :(&lt;/p&gt;

&lt;p&gt;I started digging through some &lt;a href=&#34;http://blogs.msdn.com/b/ie/archive/2011/03/24/ie9-s-document-modes-and-javascript.aspx&#34;&gt;msdn docs&lt;/a&gt; to find various
ways of sniffing the actual browser we&amp;rsquo;re using, even when compatibility mode is forced. This led me to &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/gg622938.aspx&#34;&gt;this doc&lt;/a&gt;
Which talks about how IE9&amp;rsquo;s Chakra JavaScript engine processes math precision differently (and faster) than the old IE8 JScript engine.&lt;/p&gt;

&lt;p&gt;So using the following bit of code, we are able to detect the true browser version no matter what compatibility mode it&amp;rsquo;s in.
&lt;code&gt;&lt;pre&gt;
if ($.browser.msie &amp;amp;&amp;amp; parseInt($.browser.version, 10) &amp;lt;= 8) {
var x = 6.28318530717958620000;
var val = Math.sin(x);
  if(Math.abs(val) === 2.4492127076447545e-16){
  //do your IE6,7,8 shit here
  }
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Easier/better way?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>